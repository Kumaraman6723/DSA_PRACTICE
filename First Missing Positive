class Solution {
    public int firstMissingPositive(int[] nums) {

        int i = 0;
        while (i < nums.length) {
            int correct = nums[i] - 1; // Calculate correct index
            if (nums[i] > 0 && nums[i] <= nums.length && nums[i] != nums[correct]) {
                swap(nums, i, correct);
            } else {
                i++;
            }
        }

        // Find the missing number
        for (int j = 0; j < nums.length; j++) {
            if (nums[j] != j + 1) {
                return j + 1;
            }
        }

        // If no missing number found, return the maximum possible number
        return nums.length + 1;
    }

    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
