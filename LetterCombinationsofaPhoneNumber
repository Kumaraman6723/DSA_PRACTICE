class Solution {
   public static List<String> letterCombinations(String digits) {

        ArrayList<String> list = new ArrayList<>();
         if (digits.isEmpty()) return list;
        list.addAll(combination("", digits));
        return list;
    }
    static List<String> combination(String p, String up)
    {
        ArrayList<String> list = new ArrayList<>();
        if(up.isEmpty())
        {
           list.add(p);
           return list;
        }
        int digit =up.charAt(0)-'1';
        if(digit==6)
        {
            for(int i=(digit-1)*3;i<=(digit*3);i++)
            {
                char ch=(char)('a'+i);
                list.addAll(combination(p+ch,up.substring(1)));
            }
        }
        else if(digit==8)
        {
            for(int i=((digit-1)*3)+1;i<=(digit*3)+1;i++)
            {
                char ch=(char)('a'+i);
                list.addAll(combination(p+ch,up.substring(1)));
            }
        }
        else if(digit==7)
        {
             for(int i=((digit-1)*3)+1;i<=digit*3;i++)
        {
            char ch=(char)('a'+i);
            list.addAll(combination(p+ch,up.substring(1)));
        }
        }
        else{
        for(int i=(digit-1)*3;i<digit*3;i++)
        {
            char ch=(char)('a'+i);
            list.addAll(combination(p+ch,up.substring(1)));
        }

    }
        return list;
    }
}
