import java.util.Arrays;

public class SortedMatrix {
    public static void main(String[] args) {
        int[][] matrix = {
                {1, 3, 5, 7},
                {10, 11, 16, 20},
                {23, 30, 34, 50}
        };

        // Sample target value
        int target = 16;

        // Perform the search
        int[] result = search(matrix, target);
        System.out.println(Arrays.toString(result));
    }
    static int[] BinarySearch(int[][] matrix,int r,int cStart,int cEnd,int target)
    {
        while(cStart<=cEnd)
        {
            int  mid=cStart+(cEnd-cStart)/2;
            if(matrix[r][mid]==target)
            {
                return new int[]{r,mid};
            }
            if(matrix[r][mid]>target)
            {
                cEnd=mid-1;
            }
            else {
                cStart=mid+1;
            }

        }
        return new int[]{-1,-1};
    }



    static int[] search(int[][] matrix , int target)
    {
        int r=matrix.length;
        int c=matrix[0].length;
        if(r==1)
        {
            return BinarySearch(matrix,0,0,c-1,target);
        }
        int rStart=0;
        int rEnd=r-1;
        int cMid=c/2;
        while (rStart<=(rEnd-1))
        {
            int mid=rStart+(rEnd-rStart)/2;
            if (matrix[mid][cMid]==target)
            {
                return new int[]{mid,cMid};
            }
            if(matrix[mid][cMid]<target)
            {
                rStart=mid+1;

            }
            else {
                rEnd=mid-1;
            }
        }
        return new int[]{-1,-1};

    }
}
